โหลด SQLite >> sqlitebrowser.org

INTEGER 	== จำ นวนเต็ม
TEXT 		== เก็บข้อความ
BLOB	     == เก็บภาพ หรือ ไฟล์
REAL 	     == เก็บเลขทศนิยมไม่ระบุว่า ทศนิยมกี่ตำแหน่ง ดับเบิล โฟลท
NUMERIC    == จำ นวนเต็มที่ระบุทศนิยมได้ ระบุตำแหน่งทศนิยมแน่นอน หริอค่าบุรี จริง เทจ หรือ ค่าเดท วันเวลา

NN   == ห้ามมีค่าว่าง
PK   == คีหลักที่ไม่ซ้ำ
AI   == เพิ่มตัวเลข ของแถวอัตโนมัติ เพิ่มขึ้นเรี่อยๆ ตามลำดับ  >> ต้องใช้ INTEGER 
U    == ห้ามข้อมูลซ้ำ กัน >> ไม่ค่อยนิยมใช้ เพราะมี PK อยู่แล้ว

		คำสั่ง SQL จะเป็นตัวพิมพ์ใหญ่
INSERT INTO ชื่อtable (ชื่อคอลลัม,ชื่อคอลลัม) == เพิ่มข้อมูลลงในตาราง
VALUES ('ข้อมูลที่ต้องการเพิ่ม','ถ้าเป็นข้อความให้ใส่'' ',ถ้าป้อนข้อมูลของ REAL หรือ NUMERIC ไม่ต้องใส่ '' ) == ข้อมูลที่ต้องการเพิ่มลงในตาราง ใช้ ' " ก็ได้

กด f5 หรือกดปุ่มเครื่องหมายเล่น เพื่อรันคำสั่ง

	เพิ่มข้อมูลแบบไม่ระบุชื่อคอลัมน์
INSERT INTO ชื่อtable
VALUES (null = PK ที่ระบุค่า nullได้,'ข้อมูลที่ต้องการเพิ่ม','ถ้าเป็นข้อความให้ใส่'' ',ถ้าป้อนข้อมูลของ REAL หรือ NUMERIC ไม่ต้องใส่ '' )

	เพิ่ม หรือ บันทึกข้อมูล แบบบางคอลัมน์
INSERT INTO ชือtable (ชื่อคอ,ชื่อคอ)
VALUES ("ข้อมูล","ข้อมูล")

	เพิ่มข้อมูลหลายรายการในครั้งเดียว
INSERT INTO ชือtable (ชื่อคอ,ชื่อคอ)
VALUES ("ข้อมูล1","ข้อมูล1"),("ข้อมูล2","ข้อมูล2"),("ข้อมูล3","ข้อมูล3")

	ตั้งค่าเริ่มต้นให้กับข้อมูล
เข้าไปที่ modify table >> เพิ่มค่าเริ่มต้นลงในช่อง Default ใส่ '' หรือไม่ใส่ ดูตาม type == ถ้าบันทึก หรือเพิ่มข้อมูล ถ้าช่องไหนไม่ระบุข้อมูล ข้อมูลจะระบุตามค่าเริ่มต้น
	
	บันทึกชื่อ ให้ไม่ซ้ำกัน
ไปที่ modify table >> ติ๊กช่อง U ในช่องที่ไม่อยากให้ชื่อซ้ำกัน

	ตั้งเงื่อนไข การบันทึกข้อมูล
ไปที่ modify table >> ระบุเงื่อนไขในช่อง check >> พิมพ์ชื่อคอลัมน์ ตามด้วยเงื่อนไข >,<,= >> เช่น "price">=100

	ค้นหาข้อมูล สอบถามข้อมูลเบื้องต้น
SELECT ชื่อคอลัมน์,ชื่อคอลัมน์  >> จะระบุกี่คอลัมน์ก็ได้ตามต้องการ หรือ สลับคอไหนขึ้นก่อนก็ได้ ถ้าระยุ * ก็จะได้ข้อมูลทั้งหมดตามตาราง
FROM ชื่อตาราง หรือ ชื่อ table

	ค้นหา สอบถามข้อมูล ให้เปลี่ยนชื่อคอลัมน์ ตอนแสดงข้อมูล
SELECT ชื่อคอลัมน์ as หรือ AS 'คำที่ต้องการให้แสดงแทนชื่อคอลัมน์เดิม' หรือ "คำที่ต้องการ" >> ถ้าจะให้สื่อความหมาย ใช้ พิมพ์ใหญ่ดีกว่า -
-เพราะคำสั่ง SQL ส่วนใหญ่ หรือทั้งหมด จะใข้ตัวพิมพ์ใหญ่

	แสดงข้อมูลแบบไม่ซ้ำ หรือ ดึงข้อมูลที่ซ้ำมาแค่อันเดียว และแสดงจำนวนข้อมูลที่ซ้ำ
SELECT DISTINCT // แสดงข้อมูลที่ไม่ซ้ำ
fname AS "ชื่อ"
COUNT(*) AS "จำนวน"  // ดูจำ นวนข้อมูลที่ซ้ำกัน
FROM Employee
GROUP BY fname  // จัดกลุ่มข้อมูลซ้ำ ตามคอลัมน์ชื่อคอลัมน์ที่ระบุ

	สอบถามข้อมูลแบบมีเงื่อนไข (WHERE)
SELECT *
FROM Employee
WHERE lname = "สมหมาย" // สมหมาย == ข้อมูลที่ต้องการสอบถาม

	สอบถามข้อมูลแบบมีเงื่อนไข (WHERE) ใช้เครื่องหมายเปรียบเทียบ = , != , < , > , <= , >=
SELECT *
FROM Employee
WHERE lname != "สมหมาย" // สมหมาย == ข้อมูลที่ต้องการสอบถาม

	เชื่อมเงื่อนไขด้วย AND OR NOT
- AND == ต้องจริง2 หรือ ทุกข้อมูล
- OR  == จริงอย่างน้อย 1 อย่าง
- NOT == ไม่ใช่ หรือ ตรงข้าม
ex. WHERE lname = "aaa" AND fname = "bbb" AND address = "ccc"
ex. WHERE lname = "aaa" OR fname = "bbb" OR address = "ccc"
ex. WHERE NOT lname = "aaa" AND NOT fname = "bbb" AND NOT address = "ccc"

	เช็คค่าว่างด้วย IS NULL หรือ เช็คว่ามีข้อมูลแล้วหรือ ไม่ว่าง ด้วย NOT NULL
WHERE fname IS NULL // == ใครที่ชื่อว่าง
WHERE fname IS NULL AND lname	IS NULL // == ใครที่ชื่อว่าง และ นามสกุลว่าง
WHERE fname NOT NULL  // == ใครที่ชื่อไม่ว่าง หรือ ไม่ว่าง

	เรียงตัวอักษร พยันชนะ หรือตัวเลข ของข้อมูลจากน้อยไปมาก ASC , เรียงจากมากไปน้อย DESC
WHERE fname NOT NULL AND lname NOT NULL // ถ้าไม่เจาะจง ไม่ต้องใส่
ORDER BY ชื่อคอลัมน์ที่ต้องการเรีบงลำดับ ASC

	จำกัดจำนวนบรรทัดด้วย LIMIT หรือจำนวนบรรทัดที่ต้องการ
FROM ชื่อ table
LIMIT 4 // จำ นวนแถวที่ต้องการให้แสดง
, FROM ขื่อ
  WHERE lanme = 	"ใจดีดี"
  ORDER BY employee_id DESC
  LIMIT 2

	เพิ่มข้อมูล ด้วยข้อมูลตารางอื่น จะดึงข้อมูลที่เหมือนกันจากตารางเก่ามาใส่ตารางใหม่ ดึงทั้งหมด หรือ ดึงแค่บางคน หรือ บางแถว ด้วยการระบุเงื่อนไข (ประเภทข้อมูลต้องเหมือนกัน เช่น text real)
INSERT INTO Newtable(ชื่อตารางที่ต้องการเพิ่มข้อมูลใหม่) (newcor(ชื่อคอลัมน์),newcor(ชื่อคอลัมน์))
SELECT oldcor(ชื่อคอลัมน์),old(ขื่อคอลัมน์)
FROM Oldtable(ชื่อตารางที่ต้องการดึงข้อมูลมา)
WHERE price=5000  // ดึงข้อมูลแค่ของคนที่มีรายได้เท่ากับ 5000 หรือ ถ้าจะดึงทุกคนก็ไม่ต้องใส่ WHERE

	อัพเดท หรือแก้ไขข้อมูลในตาราง
UPDATE ชื่อตาราง
SET fname = "aaa" , lname = "bbb" // ชื่อคอลัมน์ และข้อมูลใหม่ที่ต้องการอัพเดท
WHERE fname IS NULL // เงื่อนไขในการอัพ ถ้าไม่ระบุจะอัพทุกแถว

	การลบข้อมูลในตาราง
DELETE FROM ชื่อตาราง
WHERE employee_id >=10 // ลบตามเงื่นไข ถ้าไม่ใส่จะลบทั้งหมด 

	การใช้ LIKE และ % และ _ ในการค้นหาข้อมูลจากตาราง
SELECT * FROM ชื่อตาราง
WHERE ชื่อคอลัมน์ LIKE "abc123%" 
 - "%" == แทนตัวอักษร หรือตัวเลข กี่จำนวนก็ได้ ใช้ในกรณีที่ไม่รู้จำนวนของคำ
 - "%abc123" == ค้นหา abc123 ที่อยู่หลังสุดของคำ
 - "abc123%" == ค้นหา abc123 ที่อยู่หน้าสุดของคำ
 - "%aaa%"   == ค้นหา aaa ที่มีอยู่ส่วนไหนของคำก็ได้
 - "aa%bb"   == ค้นหา aa ที่อยู่หน้าสุดของคำ และ bb ที่อยู่หลังสุดของคำ
 
 - "_" == ใช้แทนตัวอักษร หรือ ตัวเลข ที่เราไม่รู้ ใช้แทนตัวอะไรก็ได้ 
 - "_ab"     == ค้นหา ตัวแรกเป็นอะไรก็ได้ แต่ตัวที่ 2 และ 3 ต้องเป็น a กับ b คำนี้ต้องมี 3 ตัว
 - "a__b%"   == ค้นหา ตัวแรกต้องเป็น a แต่ตัวที่ 2 กับ 3 เป็นตัวอะไรก็ได้ ตัวที่ 4 ต้องเป็น b คำนี้จะมีหลังจาก b กี่ตัวก็ได้ 
 
	+ - * / ช้อมูลตัวเลขในตาราง
SELECT 
salary(ชื่อคอลัมน์) , // แสดงข้อมูลเดิมของตาราง
salary+100 AS "บวกเพิ่มแล้วแต่จะระบุจำนวน(ชื่อคอลัมน์ใหม่ที่ใช้แสดงแทนชื่อเก่า)"
salary-200 AS "ลบออก"
salary *12 AS "คูนเข้าไป"
salary / 30 AS "หาร"
FORM ชื่อtable
WHERE (salary *12) >= 100000 // เงื่อนไข ที่จะให้ข้อมูลไหนบ้างที่แสดง ถ้าไม่ไส่ก็จะแสดงทั้งหมด

	คำสั่ง IN และ NOT IN
SELECT * FROM ชื่อtable
WHERE address IN ('กรุงเทพ','ภูเกต','ระยอง') // ให้แสดง เฉพาะคนที่อยู่ในวงเล็บ ถ้า NOT IN จะแสดงเฉพาะคนที่ไม่อยู่ในวงเล็บ

	คำสั่ง BETWEEN หรือ ระหว่าง
WHERE salary BETWEEN 3000 AND 5000 // ให้แสดงเงินเดือน 3000 ถึง 5000

	หาค่าต่างๆ ของคอลัมน์ตัวเลข
SELECT 
COUNT (*) AS "จำนวนแถวทั้งหมดในตาราง หรือ จำนวนพนักงานทั้งหมด"
MAX(salary(ชื่อคอลัมน์)) AS "ค่าสูงสุดของคอลัมน์"
MIN(salary)  AS "ค่าต่ำสุด"
SUM(salary)  AS "ค่ารวมทั้งหมด"
AVG(salary)  AS "ค่าเฉลี่ยของทั้งหมด"
FORM ชื่อtable

	CASE WHEN THEN ถ้าค่าไหนตรงตามตารางจะให้แสดงข้อมูลอะไรเพิ่ม
SELECT salary(ชื่อคอลัมน์),
(
CASE salary WHEN 5000 THEN "aaa"  // ถ้าเงินเดือน 5000 ให้เป็น aaa ในคอลัมน์ใหม่
WHEN 15000 THEN "BBB"   // ถ้าเงินเดือน 15000 ให้เป็น BBB 
ELSE "ccc" END    // นอกเหนือจาก 5000 และ 15000 ให้เป็นค่า ccc 
) AS  "ชื่อคอลัมน์ใหม่ที่จะให้แสดง"

FROM Employee

	LIKE ร่วมกับ WHEN THEN มี like ไม่ต้องมี()
SELECT fname ,
CASE
WHEN lname LIKE "%ดี%ดี%"  // มี ดี 2 คำ ให้ระบุ 2
THEN 2
WHEN lname LIKE "%ดี%"    // มี ดี 1 คำ ให้ระบุ 1
THEN 1 
ELSE 0 END AS "จำนวน"
FROM Employee

	จัดกลุมข้อมูลที่เหมือนกันด้วย GROUP BY 
SELECT fname(ต้องการจะจัด) , COUNT(*) (ตัวนับ)
FROM ชื่อtable
GROUP BY fname(รวมข้อมูลที่เหมื่อนกันมาอยู่ด้วยกัน)

	GROUP BY ร่วมกับ MAX MIN AVG SUM
SELECT address , COUNT(*),
MAX(salary) ,
MIN(salary) ,
AVG(salary) ,
SUM(salary) 
FORM Employee
GROUP BY address

	เงื่อนไขกลุ่มข้อมูล(HAVING)
SELECT address ,
COUNT(*) AS "จำนวน"
SUM(salary) AS "เงินเดือนรวม"
FROM Employee
GROUP BY address
HAVING SUM(aslary) >= 7000 AND COUNT(*) >=2  // แสดงแค่กลุ่มที่มีเงินรวม 7000 ขึ้นไป และ มี 2 คนขึ้นไป

	Sub Query == เทียบข้อมูลกับอีกตาราง
SELECT fname(main) , address(main)
FROM Employee(main)
WHERE address(main) = (SELECT city(sub) FROM Customer(sub) WHERE fname(sub) = "หิงห้อย" // สอบถามว่า ตารางmain มีใครอยู่ ที่เดียวกับ หิงห้อย ตารางsub ไหม






	




	











